# ==========================================
# Next.js & Prisma required environment vars
# ==========================================

# Next.js runtime
NODE_ENV=development
PORT=3000
NEXT_TELEMETRY_DISABLED=1

# Prisma datasource (used in prisma/schema.prisma)
# If running app on host: host=localhost
# If running app inside Docker network: host=postgres
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/hepibite?schema=public

# Optional: Shadow DB for Prisma Migrate
SHADOW_DATABASE_URL=postgresql://postgres:postgres@localhost:5432/hepibite_shadow?schema=public


# ==========================================
# Docker Compose: PostgreSQL
# These are read by docker-compose.yml
# ==========================================
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=hepibite

# Optional: pgAdmin (uncomment service in docker-compose.yml to use)
PGADMIN_DEFAULT_EMAIL=admin@local
PGADMIN_DEFAULT_PASSWORD=admin


# ==========================================
# Auth (JWT)
# ==========================================
# Use a long, random string; change in production
AUTH_SECRET=change-me-to-a-long-random-string

DEFAULT_ADMIN="admin"
DEFAULT_ADMIN_PASSWORD="admin"
DEFAULT_ADMIN_EMAIL="admin@local"

# ==========================================

# ==========================================
# MinIO / S3-compatible storage (optional)
# If these are set, the server will upload files to MinIO instead of saving to public/uploads
# ==========================================
MINIO_ENDPOINT=http://localhost:9000
MINIO_PUBLIC_URL=http://localhost:9000        # optional - used to build public URLs (defaults to MINIO_ENDPOINT)
MINIO_BUCKET=my-bucket
MINIO_REGION=us-east-1
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin

# Example: when MINIO_* variables are set, uploads will be sent to MinIO. If not set, files will continue
# to be stored locally under `public/uploads`.


